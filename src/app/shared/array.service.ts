import { Injectable } from '@angular/core';
import * as d3 from 'd3';
import { Subject } from 'rxjs';

@Injectable({
  providedIn: 'root',
})
/** This class generates an array consisting of random positive integers. */
export class ArrayService {
  randomArray: number[] = [];

  //Subject used to alert when the generate array button has been clicked.
  generateArraySubj: Subject<number> = new Subject<number>();

  //Subject used to alert when the user has adjusted the thumb on the slider.
  sliderChangeSubj: Subject<number> = new Subject<number>();

  //Subject used to alert when a sorting method has been picked.
  optionClickedSubj: Subject<string> = new Subject<string>();

  //Subject used to alert that the array has been validated
  validatedSubj: Subject<void> = new Subject<void>();

  constructor() {}

  /** Generates an array with {@code size} random positive integers.
   * Positive integers are generated by mapping the domain [0, 1] to the range
   * [1, 300].
   * @param size the size of the array.
   * @param randomArray an array with {@code size} random positive integers.
   */
  generateArray(size): number[] {
    let scale = d3.scaleLinear().domain([0, 1]).range([1, 300]);
    for (let i = 0; i < size; i++) {
      let random = Math.random();
      let scaled = scale(random);
      let rounded = Math.round(scaled);
      this.randomArray.push(rounded);
    }
    return this.randomArray.slice();
  }

  /** Returns a shallow copy of the current array. */
  getArray() {
    return this.randomArray.slice();
  }

  /** Clears the array */
  clearArray(): void {
    this.randomArray.length = 0;
  }
}
